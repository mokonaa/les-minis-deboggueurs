{"ast":null,"code":"import _toConsumableArray from\"/Users/guydefontgalland/PhpstormProjects/les-minis-deboggueurs/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/guydefontgalland/PhpstormProjects/les-minis-deboggueurs/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{data}from'../../data/data';import FicheJoueur from'../FicheJoueur/FicheJoueur';import PanelAction from'../PanelAction/PanelAction';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Suivi(_ref){var joueursChoisis=_ref.joueursChoisis,animateursChoisis=_ref.animateursChoisis;// param -> data passé par Maria\n/**\n     *\n     * params : tableau des animateurs trié , tableau des enfants choisies\n     *\n     * Conditions d'affichage de vues\n     *  - Affichage des infos de l'animateur\n     *  - Affichage statique Tours joueurs  - Jet de dés + gestion de l'ordre des joueurs\n     *  - Switch entre l'affichage Joueur et affichage Animateur (prise en compte des priorités des animateurs et de l'ordre des enfants)\n     *  - Affichage statique -> Manche terminée + Btn Commencer la nouvelle manche\n    */ // Récupération de la data via Configuration, pour le moment création d'une fake data en triant les animateurs selon leur ordre\n//let animateursTries = [];\n//const thematiques = data.thematique;\nvar animateursTries=animateursChoisis;// Il faut récupérer chaque animateur de chaque thématique\n/*\n    Object.keys(thematiques).forEach((theme) => {\n        const animateurs = thematiques[theme].animateurs;\n        animateursTries.push(...animateurs);\n    });\n    //*/ // Tri des animateurs par priorité (ordre décroissant)\nanimateursTries.sort(function(a,b){return b.priorite-a.priorite;});// console.log('----- Animateurs Triés en ordre décroissant -----');\n// console.log(animateursTries);\n// console.log('-------------------------------------------------');\n// Sélection de l'ordre des joueurs selon le nb de joueurs, il faut récupérer cb de joueurs jouent\n//\n//const enfants = data.enfants;\nvar enfants=joueursChoisis;// fausse data en attendant de recevoir\nvar _useState=useState(enfants),_useState2=_slicedToArray(_useState,2),enfantsChoisis=_useState2[0],setEnfantsChoisis=_useState2[1];// Le nb de joueurs choisis\nvar nbDeJoueurs=enfants.length;var _useState3=useState('animateur'),_useState4=_slicedToArray(_useState3,2),roleActuel=_useState4[0],setRoleActuel=_useState4[1];// par défaut animateur, // /!\\ L'animateur qui a la plus grosse priorité commence toujours en premier\n// Gestion des manches et des tours (animateur -> enfant -> animateur -> enfant etc...)\nvar _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),nbManches=_useState6[0],setNbManches=_useState6[1];var nbManchesMax=10;var _useState7=useState(nbDeJoueurs*2),_useState8=_slicedToArray(_useState7,2),nbTours=_useState8[0],setNbTours=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),nbTourActuel=_useState10[0],setNbTourActuel=_useState10[1];var deplacerJoueur=function deplacerJoueur(index,nouvelIndex){var joueursEnfantCopies=_toConsumableArray(enfantsChoisis);var joueurDeplace=joueursEnfantCopies.splice(index,1)[0];joueursEnfantCopies.splice(nouvelIndex,0,joueurDeplace);setEnfantsChoisis(joueursEnfantCopies);};var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),ordreFinal=_useState12[0],setOrdreFinal=_useState12[1];// Il faut générer un nouvel ordre pour la suite du jeu\nvar genererOrdreJoueurs=function genererOrdreJoueurs(ordreJoueursEnfant,animateursTries){var nouvelOrdre=[];var nbJoueurs=ordreJoueursEnfant.length;var nbAnimateurs=animateursTries.length;// Déterminer le nombre de tours nécessaire pour combiner tous les joueurs\nvar nbTours=Math.max(nbJoueurs,nbAnimateurs);// Combinaison des joueurs \"enfant\" et des animateurs en alternance\nfor(var i=0;i<nbTours;i++){var joueurEnfant=ordreJoueursEnfant[i%nbJoueurs];// modulo % est utilisé pour revenir au début des tableaux lorsque l'index dépasse leur longueur\nvar animateur=animateursTries[i%nbAnimateurs];nouvelOrdre.push(animateur);nouvelOrdre.push(joueurEnfant);}return nouvelOrdre;};// nbTours -> correspond au nombre de tours dans une manche\n// nbTourActuel -> c'est le tour actuel de la partie si on est au tour 1 ou tour 2\nvar gestionNbTours=function gestionNbTours(){// Calcul du nombre total de tours en fonction du nombre de joueurs (animateurs et enfants)\nsetNbTourActuel(nbTourActuel+1);if(nbTourActuel%2===0){setRoleActuel('animateur');}else{setRoleActuel('enfant');}// Vérifie si la manche est terminée après chaque tour\ngestionNbManche();};var gestionNbManche=function gestionNbManche(){// Une manche se termine au bout du tours calculés selon le nb de Joueurs calculés plus tôt\nif(nbTourActuel>=nbTours){setNbManches(nbManches+1);// Passage à la prochaine manche\nsetNbTourActuel(1);setRoleActuel('animateur');}if(nbManches>nbManchesMax&&enfantsChoisis.length===0){setNbManches(11);}};var joueurActuel=nbTourActuel>1?ordreFinal[nbTourActuel-1]:animateursChoisis[0];// État pour stocker l'ordre des joueurs \"enfant\"\nvar _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),ordreJoueursEnfant=_useState14[0],setOrdreJoueursEnfant=_useState14[1];var thematiques=data.thematique;var nomDuJoueurActuel=joueurActuel.nom?joueurActuel.nom:animateursChoisis[0].nom;var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),thematiqueActuel=_useState16[0],setThematiqueActuel=_useState16[1];// Récupérer le nom de tous les animateurs et ensuite le comparer au nom du joueur actuel pour récup la bonne thématique\nvar recupThematiqueActuel=function recupThematiqueActuel(){var entriesTab=Object.keys(thematiques).map(function(key){return thematiques[key];});var nomDesAnimateurs=[];for(var i=0;i<entriesTab.length;i++){var animateurs=entriesTab[i].animateurs;for(var j=0;j<animateurs.length;j++){nomDesAnimateurs.push(animateurs[j].nom);}};var animateurTrouve=nomDesAnimateurs.find(function(nomAnimateur){return nomAnimateur===nomDuJoueurActuel;});if(animateurTrouve){var thematiqueTrouvee=entriesTab.find(function(thematique){return thematique.animateurs.find(function(animateur){return animateur.nom===animateurTrouve;});});if(thematiqueTrouvee){var thematique=thematiqueTrouvee.nomThematique;if(thematique!==thematiqueActuel){setThematiqueActuel(thematique);}}}};console.log(thematiqueActuel);recupThematiqueActuel();// Fonction pour gérer la sélection de l'ordre des joueurs \"enfant\"\n// Il faut que je teste et que j'affiche \"les enfants\" qui jouent\nvar selectionnerOrdreJoueursEnfant=function selectionnerOrdreJoueursEnfant(selectionOrdreJoueurs){setOrdreJoueursEnfant(selectionOrdreJoueurs);};var _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),afficherSelection=_useState18[0],setSelection=_useState18[1];// Variable d'état pour afficher/cacher la div d'ordre\nvar validerOrdre=function validerOrdre(){selectionnerOrdreJoueursEnfant(enfantsChoisis);// A partir d'ici on récupère l'ordre que les enfants ont choisis\nsetOrdreJoueursEnfant(enfantsChoisis);setOrdreFinal(genererOrdreJoueurs(enfantsChoisis,animateursTries));setSelection(false);setNbTourActuel(nbTourActuel+1);};useEffect(function(){// console.log(joueursChoisis);\n// console.log(animateursChoisis);\n},[joueursChoisis]);// Il faut aussi penser à chaque déplacement, panel d'actions dont un seul qui est réellement intéractif (les questions)\n// Bouton Tour terminé selon cliquable dès qu'ils ont fait au moins toutes les actions qu'ils peuvent faire\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[nbManches,\"e Manche - \",nbTourActuel,\"e Tour - role actuel : \",roleActuel]}),nbTourActuel===0&&afficherSelection&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"l'ordre des enfants\"}),/*#__PURE__*/_jsx(\"ul\",{children:enfantsChoisis.map(function(enfant,index){return/*#__PURE__*/_jsxs(\"li\",{children:[enfant.nom,/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deplacerJoueur(index,index-1);},children:\"\\u25B2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deplacerJoueur(index,index+1);},children:\"\\u25BC\"})]},enfant.id);})}),/*#__PURE__*/_jsx(\"button\",{onClick:validerOrdre,children:\"Valider l'ordre\"})]}),!afficherSelection&&/*#__PURE__*/_jsxs(\"div\",{children:[roleActuel==='enfant'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FicheJoueur,{nbDeplacements:joueurActuel.deplacement,pouvoir:joueurActuel.pouvoir,nom:joueurActuel.nom,nbVie:joueurActuel.pv,description:joueurActuel.description,nomThematique:thematiqueActuel,maudit:\"\",objectif:\"\",role:roleActuel,img:joueurActuel.image}),/*#__PURE__*/_jsx(PanelAction,{animateurs:animateursTries,thematiques:data.thematique,enfantsTab:ordreJoueursEnfant})]}):roleActuel==='animateur'&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FicheJoueur,{nbDeplacements:joueurActuel.deplacement,pouvoir:\"\",nom:joueurActuel.nom,nbVie:joueurActuel.objectifs.animateurs.points?0:5-joueurActuel.objectifs.animateurs.points,description:joueurActuel.description,maudit:joueurActuel.maudit,objectif:joueurActuel.objectifs.enfants.points?joueurActuel.objectifs.enfants.points:0,role:roleActuel,img:joueurActuel.image,nomThematique:thematiqueActuel,objectifImg:joueurActuel.objectifs.animateurs.img,enfantsTab:enfantsChoisis})}),/*#__PURE__*/_jsx(\"button\",{onClick:gestionNbTours,children:\"Passer au prochain tour\"})]}),nbManches===11&&/*#__PURE__*/_jsx(\"p\",{children:\"C'est fini c'est perdu !\"})]})});}","map":{"version":3,"names":["useState","useEffect","data","FicheJoueur","PanelAction","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Suivi","_ref","joueursChoisis","animateursChoisis","animateursTries","sort","a","b","priorite","enfants","_useState","_useState2","_slicedToArray","enfantsChoisis","setEnfantsChoisis","nbDeJoueurs","length","_useState3","_useState4","roleActuel","setRoleActuel","_useState5","_useState6","nbManches","setNbManches","nbManchesMax","_useState7","_useState8","nbTours","setNbTours","_useState9","_useState10","nbTourActuel","setNbTourActuel","deplacerJoueur","index","nouvelIndex","joueursEnfantCopies","_toConsumableArray","joueurDeplace","splice","_useState11","_useState12","ordreFinal","setOrdreFinal","genererOrdreJoueurs","ordreJoueursEnfant","nouvelOrdre","nbJoueurs","nbAnimateurs","Math","max","i","joueurEnfant","animateur","push","gestionNbTours","gestionNbManche","joueurActuel","_useState13","_useState14","setOrdreJoueursEnfant","thematiques","thematique","nomDuJoueurActuel","nom","_useState15","_useState16","thematiqueActuel","setThematiqueActuel","recupThematiqueActuel","entriesTab","Object","keys","map","key","nomDesAnimateurs","animateurs","j","animateurTrouve","find","nomAnimateur","thematiqueTrouvee","nomThematique","console","log","selectionnerOrdreJoueursEnfant","selectionOrdreJoueurs","_useState17","_useState18","afficherSelection","setSelection","validerOrdre","children","enfant","onClick","id","nbDeplacements","deplacement","pouvoir","nbVie","pv","description","maudit","objectif","role","img","image","enfantsTab","objectifs","points","objectifImg"],"sources":["/Users/guydefontgalland/PhpstormProjects/les-minis-deboggueurs/src/components/Suivi/Suivi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { data } from '../../data/data';\nimport FicheJoueur from '../FicheJoueur/FicheJoueur';\nimport PanelAction from '../PanelAction/PanelAction';\nexport default function Suivi({ joueursChoisis, animateursChoisis }) { // param -> data passé par Maria\n    /**\n     *\n     * params : tableau des animateurs trié , tableau des enfants choisies\n     *\n     * Conditions d'affichage de vues\n     *  - Affichage des infos de l'animateur\n     *  - Affichage statique Tours joueurs  - Jet de dés + gestion de l'ordre des joueurs\n     *  - Switch entre l'affichage Joueur et affichage Animateur (prise en compte des priorités des animateurs et de l'ordre des enfants)\n     *  - Affichage statique -> Manche terminée + Btn Commencer la nouvelle manche\n    */\n    // Récupération de la data via Configuration, pour le moment création d'une fake data en triant les animateurs selon leur ordre\n    //let animateursTries = [];\n    //const thematiques = data.thematique;\n    let animateursTries = animateursChoisis;\n    // Il faut récupérer chaque animateur de chaque thématique\n    /*\n    Object.keys(thematiques).forEach((theme) => {\n        const animateurs = thematiques[theme].animateurs;\n        animateursTries.push(...animateurs);\n    });\n    //*/\n    // Tri des animateurs par priorité (ordre décroissant)\n    animateursTries.sort((a, b) => b.priorite - a.priorite);\n    // console.log('----- Animateurs Triés en ordre décroissant -----');\n    // console.log(animateursTries);\n    // console.log('-------------------------------------------------');\n    // Sélection de l'ordre des joueurs selon le nb de joueurs, il faut récupérer cb de joueurs jouent\n    //\n    //const enfants = data.enfants;\n    const enfants = joueursChoisis;\n    // fausse data en attendant de recevoir\n    const [enfantsChoisis, setEnfantsChoisis] = useState(enfants);\n    // Le nb de joueurs choisis\n    const nbDeJoueurs = enfants.length;\n    const [roleActuel, setRoleActuel] = useState('animateur'); // par défaut animateur, // /!\\ L'animateur qui a la plus grosse priorité commence toujours en premier\n    // Gestion des manches et des tours (animateur -> enfant -> animateur -> enfant etc...)\n    const [nbManches, setNbManches] = useState(1);\n    const nbManchesMax = 10;\n    const [nbTours, setNbTours] = useState(nbDeJoueurs * 2);\n    const [nbTourActuel, setNbTourActuel] = useState(0);\n    const deplacerJoueur = (index, nouvelIndex) => {\n        const joueursEnfantCopies = [...enfantsChoisis];\n        const joueurDeplace = joueursEnfantCopies.splice(index, 1)[0];\n        joueursEnfantCopies.splice(nouvelIndex, 0, joueurDeplace);\n        setEnfantsChoisis(joueursEnfantCopies);\n    };\n    const [ordreFinal, setOrdreFinal] = useState([]);\n    // Il faut générer un nouvel ordre pour la suite du jeu\n    const genererOrdreJoueurs = (ordreJoueursEnfant, animateursTries) => {\n        const nouvelOrdre = [];\n        const nbJoueurs = ordreJoueursEnfant.length;\n        const nbAnimateurs = animateursTries.length;\n        // Déterminer le nombre de tours nécessaire pour combiner tous les joueurs\n        const nbTours = Math.max(nbJoueurs, nbAnimateurs);\n        // Combinaison des joueurs \"enfant\" et des animateurs en alternance\n        for (let i = 0; i < nbTours; i++) {\n            const joueurEnfant = ordreJoueursEnfant[i % nbJoueurs]; // modulo % est utilisé pour revenir au début des tableaux lorsque l'index dépasse leur longueur\n            const animateur = animateursTries[i % nbAnimateurs];\n            nouvelOrdre.push(animateur);\n            nouvelOrdre.push(joueurEnfant);\n        }\n        return nouvelOrdre;\n    };\n    // nbTours -> correspond au nombre de tours dans une manche\n    // nbTourActuel -> c'est le tour actuel de la partie si on est au tour 1 ou tour 2\n    const gestionNbTours = () => {\n        // Calcul du nombre total de tours en fonction du nombre de joueurs (animateurs et enfants)\n        setNbTourActuel(nbTourActuel + 1);\n        if (nbTourActuel % 2 === 0) {\n            setRoleActuel('animateur');\n        } else {\n            setRoleActuel('enfant');\n        }\n        // Vérifie si la manche est terminée après chaque tour\n        gestionNbManche();\n    };\n    const gestionNbManche = () => {\n        // Une manche se termine au bout du tours calculés selon le nb de Joueurs calculés plus tôt\n        if (nbTourActuel >= nbTours) {\n            setNbManches(nbManches + 1); // Passage à la prochaine manche\n            setNbTourActuel(1);\n            setRoleActuel('animateur');\n        }\n        if (nbManches > nbManchesMax && enfantsChoisis.length === 0) {\n            setNbManches(11); \n        }\n    };\n    const joueurActuel = nbTourActuel > 1 ? ordreFinal[nbTourActuel - 1] : animateursChoisis[0];\n    // État pour stocker l'ordre des joueurs \"enfant\"\n    const [ordreJoueursEnfant, setOrdreJoueursEnfant] = useState([]);\n    const thematiques = data.thematique;\n    const nomDuJoueurActuel = joueurActuel.nom ? joueurActuel.nom : animateursChoisis[0].nom;\n    const [thematiqueActuel, setThematiqueActuel] = useState('');\n    // Récupérer le nom de tous les animateurs et ensuite le comparer au nom du joueur actuel pour récup la bonne thématique\n    const recupThematiqueActuel = () => {\n        const entriesTab = Object.keys(thematiques).map((key) => thematiques[key]);\n        const nomDesAnimateurs = [];\n        for (let i = 0; i < entriesTab.length; i++) {\n            const animateurs = entriesTab[i].animateurs;\n            for (let j = 0; j < animateurs.length; j++) {\n                nomDesAnimateurs.push(animateurs[j].nom);\n            }\n        };\n        const animateurTrouve = nomDesAnimateurs.find(\n            (nomAnimateur) => nomAnimateur === nomDuJoueurActuel\n        );\n        if (animateurTrouve) {\n            const thematiqueTrouvee = entriesTab.find((thematique) =>\n                thematique.animateurs.find((animateur) => animateur.nom === animateurTrouve)\n            );\n            if (thematiqueTrouvee) {\n                const thematique = thematiqueTrouvee.nomThematique;\n                if (thematique !== thematiqueActuel) {\n                    setThematiqueActuel(thematique);\n                }\n            }\n        }\n    };\n    console.log(thematiqueActuel);\n    recupThematiqueActuel();\n    // Fonction pour gérer la sélection de l'ordre des joueurs \"enfant\"\n    // Il faut que je teste et que j'affiche \"les enfants\" qui jouent\n    const selectionnerOrdreJoueursEnfant = (selectionOrdreJoueurs) => {\n        setOrdreJoueursEnfant(selectionOrdreJoueurs);\n    };\n    const [afficherSelection, setSelection] = useState(true); // Variable d'état pour afficher/cacher la div d'ordre\n    const validerOrdre = () => {\n        selectionnerOrdreJoueursEnfant(enfantsChoisis);\n        // A partir d'ici on récupère l'ordre que les enfants ont choisis\n        setOrdreJoueursEnfant(enfantsChoisis);\n        setOrdreFinal(genererOrdreJoueurs(enfantsChoisis, animateursTries));\n        setSelection(false);\n        setNbTourActuel(nbTourActuel + 1);\n    };\n    useEffect(() => {\n        // console.log(joueursChoisis);\n        // console.log(animateursChoisis);\n    }, [joueursChoisis])\n    // Il faut aussi penser à chaque déplacement, panel d'actions dont un seul qui est réellement intéractif (les questions)\n    // Bouton Tour terminé selon cliquable dès qu'ils ont fait au moins toutes les actions qu'ils peuvent faire\n    return (\n        <>\n            <div>\n                <h3>{nbManches}e Manche - {nbTourActuel}e Tour - role actuel : {roleActuel}</h3>\n                {nbTourActuel === 0 && afficherSelection && (\n                    <div>\n                        <h2>l'ordre des enfants</h2>\n                        <ul>\n                            {enfantsChoisis.map((enfant, index) => (\n                                <li key={enfant.id}>\n                                    {enfant.nom}\n                                    <button onClick={() => deplacerJoueur(index, index - 1)}>▲</button>\n                                    <button onClick={() => deplacerJoueur(index, index + 1)}>▼</button>\n                                </li>\n                            ))}\n                        </ul>\n                        <button onClick={validerOrdre}>Valider l'ordre</button>\n                    </div>\n                )}\n                {!afficherSelection &&  (\n                    <div>\n                        {roleActuel === 'enfant' ?\n                            <>\n                                <FicheJoueur nbDeplacements={joueurActuel.deplacement} pouvoir={joueurActuel.pouvoir} nom={joueurActuel.nom} nbVie={joueurActuel.pv} description={joueurActuel.description} nomThematique={thematiqueActuel} maudit={\"\"} objectif={\"\"} role={roleActuel} img={joueurActuel.image} />\n                                <PanelAction animateurs={animateursTries} thematiques={data.thematique} enfantsTab={ordreJoueursEnfant}/>\n                            </>\n                            :\n                            roleActuel === 'animateur' && (\n                                <>\n                                    <FicheJoueur nbDeplacements={joueurActuel.deplacement} pouvoir=\"\" nom={joueurActuel.nom}\n                                        nbVie={joueurActuel.objectifs.animateurs.points ? 0 : 5 - joueurActuel.objectifs.animateurs.points}\n                                        description={joueurActuel.description} maudit={joueurActuel.maudit}\n                                        objectif={joueurActuel.objectifs.enfants.points ? joueurActuel.objectifs.enfants.points : 0} role={roleActuel} img={joueurActuel.image} nomThematique={thematiqueActuel} objectifImg={joueurActuel.objectifs.animateurs.img} enfantsTab={enfantsChoisis}/>\n                                </>\n                            )\n                        }\n                        <button onClick={gestionNbTours}>Passer au prochain tour</button>\n                    </div>\n                )}\n                {nbManches === 11 && (\n                    <p>C'est fini c'est perdu !</p>\n                )}\n            </div>\n        </>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}