{"ast":null,"code":"var _jsxFileName = \"/Users/guydefontgalland/PhpstormProjects/les-minis-deboggueurs/src/components/PanelAction/PanelAction.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport stalkyProfil from '../../assets/img/perso-stalky.svg';\nimport choisiIcon from '../../assets/img/persoValide.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PanelAction(_ref) {\n  _s();\n  let {\n    animateurs,\n    thematiques\n  } = _ref;\n  const [showPopInQuestion, setShowPopInQuestion] = useState(false);\n  const [animateursQuestionsInfos, setAnimateursQuestionsInfos] = useState([]);\n  const [questionQuizz, setQuestionQuizz] = useState({});\n  const [bonneReponse, setBonneReponse] = useState(2); // bon (1) mauvais (0) \n  const [displayQuestionView, setDisplayQuestionView] = useState(false);\n  let tabReponseJoueurs = [];\n  const displayPopIn = () => {\n    setShowPopInQuestion(true);\n    //console.log(showPopInQuestion);\n  };\n\n  const reinit = () => {\n    setDisplayQuestionView(false);\n    setAnimateursQuestionsInfos([]);\n    setQuestionQuizz({});\n    setBonneReponse(2);\n  };\n  const displayQuestion = nomThematique => {\n    /*\n    console.log(nomThematique);\n    console.log(thematiques);\n    console.log(thematiques[nomThematique]);\n    //*/\n    setAnimateursQuestionsInfos(thematiques[nomThematique]);\n    let randomNumber = Math.floor(Math.random() * (thematiques[nomThematique].questions.length - 0) + 0);\n    /*\n    console.log(randomNumber);\n    console.log(thematiques[nomThematique].questions[randomNumber]);\n    //*/\n    setQuestionQuizz(thematiques[nomThematique].questions[randomNumber]);\n    let containersAnimateurs = document.getElementsByClassName('animateurInfos');\n    //let containersAnimateurs = document.getElementsByClassName('animateurInfos');\n    //console.log(containersAnimateurs);\n    //console.log(typeof containersAnimateurs);\n    //containersAnimateurs.map(animateurDiv => animateurDiv.style.background = 'red');\n\n    // retrait de l'icon checked partout\n    let containersprofileOpacity = document.getElementsByClassName('profileOpacity');\n    let containersprofileChecked = document.getElementsByClassName('profileChecked');\n    for (let k = 0; k < containersprofileOpacity.length; k++) {\n      containersprofileOpacity[k].classList.remove('ajoutBackgroundChoisi');\n    }\n    for (let i = 0; i < containersAnimateurs.length; i++) {\n      //console.log(containersAnimateurs[i]);\n      containersAnimateurs[i].style.background = \"white\";\n      containersAnimateurs[i].style.color = \"black\";\n\n      //console.log(containersAnimateurs[i].id);\n      if (containersAnimateurs[i].id == \"animateur_\" + nomThematique) {\n        containersAnimateurs[i].style.background = \"#433162\";\n        containersAnimateurs[i].style.color = \"white\";\n        document.getElementById('profileOpacity_' + nomThematique).classList.add('ajoutBackgroundChoisi');\n        document.getElementById('profileChecked_' + nomThematique).style.display = 'block';\n      }\n    }\n  };\n  const ajoutReponse = index => {\n    if (!tabReponseJoueurs.includes(index)) {\n      tabReponseJoueurs.push(index);\n      let reponseContainer = document.getElementById('reponse' + index);\n      reponseContainer.style.background = '#e375a3';\n      reponseContainer.style.color = 'white';\n    } else {\n      console.log('already added');\n    }\n  };\n  const verifieReponse = () => {\n    //console.log(tabReponseJoueurs);\n    //console.log(questionQuizz);\n    if (!Array.isArray(questionQuizz.bonne_reponse)) {\n      // unique bonne réponse\n      if (tabReponseJoueurs.length == 1 && questionQuizz.bonne_reponse == tabReponseJoueurs[0]) {\n        // cocher qu\"une case et c'est la bonne réponse\n        setBonneReponse(1);\n        console.log('gagné');\n      } else {\n        setBonneReponse(0);\n        console.log('non gagné');\n      }\n    } else {\n      console.log('mchoice');\n      tabReponseJoueurs = tabReponseJoueurs.sort();\n      console.log(tabReponseJoueurs);\n      console.log(questionQuizz.bonne_reponse);\n      if (tabReponseJoueurs.sort().toString() == questionQuizz.bonne_reponse.sort().toString()) {\n        console.log('gagné multiple choices');\n        setBonneReponse(1);\n      } else {\n        setBonneReponse(0);\n        console.log('non multiple choices');\n      }\n    }\n    document.getElementById('validBtn').style.display = 'none';\n    // TODO boucler et n'affichez que les réponses choisies par le joueur\n    let reponses = document.getElementsByClassName('reponses');\n    for (let i = 0; i < reponses.length; i++) {\n      reponses[i].style.background = '#e06f4d';\n      reponses[i].style.color = 'white';\n    }\n    if (Array.isArray(questionQuizz.bonne_reponse)) {\n      for (let i = 0; i < questionQuizz.bonne_reponse.length; i++) {\n        console.log(questionQuizz.bonne_reponse[i]);\n        document.getElementById('reponse' + questionQuizz.bonne_reponse[i]).style.background = '#4fab78';\n      }\n    } else {\n      console.log(document.getElementById('reponse' + questionQuizz.bonne_reponse[0]));\n      console.log(questionQuizz.bonne_reponse);\n      document.getElementById('reponse' + questionQuizz.bonne_reponse).style.background = '#4fab78';\n      document.getElementById('reponse' + questionQuizz.bonne_reponse).style.color = 'white';\n    }\n\n    // TODO CSS\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"panelActions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => displayPopIn(),\n        children: \"Question Quizz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), showPopInQuestion && /*#__PURE__*/_jsxDEV(Modal, {\n      setShowModal: setShowPopInQuestion,\n      children: [!displayQuestionView && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"choixAnimateur\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subTitle\",\n          children: \"CHOISSISEZ L'ANIMATEUR QUE VOUS SOUHAITEZ GU\\xC9RIR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"remarque\",\n          children: \"\\xC0 noter que la question quizz n\\u2019est disponible que lors de la r\\xE9cup\\xE9ration d\\u2018un point \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listAnimateurChoisis\",\n          children: animateurs.map(animateur => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animateurInfos\",\n            id: 'animateur_' + animateur.nomThematique,\n            onClick: () => displayQuestion(animateur.nomThematique),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profil\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profil_containerImg\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profileOpacity\",\n                  id: 'profileOpacity_' + animateur.nomThematique\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profileChecked\",\n                  id: 'profileChecked_' + animateur.nomThematique,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: choisiIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 132\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: stalkyProfil\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"persoNom\",\n              children: animateur.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonConfirmer\",\n          onClick: () => questionQuizz.choix !== undefined ? setDisplayQuestionView(true) : console.log('nothing to display'),\n          children: \"Super !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this), displayQuestionView && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"questionQuizz\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subTitle\",\n          children: \"QUESTION QUIZZ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"nomThematique\",\n          children: animateursQuestionsInfos.nomThematique\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"questionTitre\",\n            children: questionQuizz.titre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), questionQuizz.choix.multiples ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listReponses\",\n            children: questionQuizz.choix.multiples.map((choix, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"reponses\",\n              id: \"reponse\" + i,\n              onClick: () => ajoutReponse(i),\n              children: choix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 116\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listReponses\",\n            children: questionQuizz.choix.map((choix, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"reponses\",\n              id: \"reponse\" + i,\n              onClick: () => ajoutReponse(i),\n              children: choix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 106\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonConfirmer\",\n            id: \"validBtn\",\n            onClick: () => verifieReponse(),\n            children: \"Valider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this), bonneReponse === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultsContainer\",\n          id: \"resultsContainer_bon\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result\",\n            children: \"Bravo ! Tu peux r\\xE9cup\\xE9rer un point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infos\",\n            children: \"Pour plus d\\u2019informations n\\u2019h\\xE9site pas \\xE0 aller dans la galerie pour trouver des ressources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }, this), bonneReponse === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultsContainer\",\n          id: \"resultsContainer_mauvais\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result\",\n            children: \"Mince, pas de point pour cette fois\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infos\",\n            children: \"Pour plus d\\u2019informations n\\u2019h\\xE9site pas \\xE0 aller dans la galerie pour trouver des ressources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n_s(PanelAction, \"W7/UxTO/qyS6EiexsoBFjPHj0eg=\");\n_c = PanelAction;\nvar _c;\n$RefreshReg$(_c, \"PanelAction\");","map":{"version":3,"names":["useState","Modal","stalkyProfil","choisiIcon","jsxDEV","_jsxDEV","PanelAction","_ref","_s","animateurs","thematiques","showPopInQuestion","setShowPopInQuestion","animateursQuestionsInfos","setAnimateursQuestionsInfos","questionQuizz","setQuestionQuizz","bonneReponse","setBonneReponse","displayQuestionView","setDisplayQuestionView","tabReponseJoueurs","displayPopIn","reinit","displayQuestion","nomThematique","randomNumber","Math","floor","random","questions","length","containersAnimateurs","document","getElementsByClassName","containersprofileOpacity","containersprofileChecked","k","classList","remove","i","style","background","color","id","getElementById","add","display","ajoutReponse","index","includes","push","reponseContainer","console","log","verifieReponse","Array","isArray","bonne_reponse","sort","toString","reponses","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","setShowModal","className","map","animateur","src","nom","choix","undefined","titre","multiples","_c","$RefreshReg$"],"sources":["/Users/guydefontgalland/PhpstormProjects/les-minis-deboggueurs/src/components/PanelAction/PanelAction.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport stalkyProfil from '../../assets/img/perso-stalky.svg';\nimport choisiIcon from '../../assets/img/persoValide.svg';\n\nexport default function PanelAction({animateurs,thematiques}) {\n\n    const [showPopInQuestion,setShowPopInQuestion] = useState(false);\n    const [animateursQuestionsInfos,setAnimateursQuestionsInfos] = useState([]);\n    const [questionQuizz,setQuestionQuizz] = useState({});\n    const [bonneReponse, setBonneReponse] = useState(2); // bon (1) mauvais (0) \n    const [displayQuestionView, setDisplayQuestionView] = useState(false); \n    let tabReponseJoueurs = [];\n\n    const displayPopIn = () => {\n        setShowPopInQuestion(true);\n        //console.log(showPopInQuestion);\n    }\n\n    const reinit = () => {\n        setDisplayQuestionView(false);\n        setAnimateursQuestionsInfos([]);\n        setQuestionQuizz({});\n        setBonneReponse(2);\n    }\n\n    const displayQuestion = (nomThematique) => {\n        /*\n        console.log(nomThematique);\n        console.log(thematiques);\n        console.log(thematiques[nomThematique]);\n        //*/\n        setAnimateursQuestionsInfos(thematiques[nomThematique]);\n        let randomNumber = Math.floor(Math.random() * (thematiques[nomThematique].questions.length - 0) + 0)\n        /*\n        console.log(randomNumber);\n        console.log(thematiques[nomThematique].questions[randomNumber]);\n        //*/\n        setQuestionQuizz(thematiques[nomThematique].questions[randomNumber]);\n\n        let containersAnimateurs = document.getElementsByClassName('animateurInfos');\n        //let containersAnimateurs = document.getElementsByClassName('animateurInfos');\n        //console.log(containersAnimateurs);\n        //console.log(typeof containersAnimateurs);\n        //containersAnimateurs.map(animateurDiv => animateurDiv.style.background = 'red');\n\n        // retrait de l'icon checked partout\n        let containersprofileOpacity = document.getElementsByClassName('profileOpacity');\n        let containersprofileChecked = document.getElementsByClassName('profileChecked');\n        for (let k = 0; k<containersprofileOpacity.length; k++) {\n            containersprofileOpacity[k].classList.remove('ajoutBackgroundChoisi');\n        }\n\n\n        for (let i=0; i<containersAnimateurs.length; i++) {\n            //console.log(containersAnimateurs[i]);\n            containersAnimateurs[i].style.background = \"white\";\n            containersAnimateurs[i].style.color = \"black\";\n\n            //console.log(containersAnimateurs[i].id);\n            if (containersAnimateurs[i].id == \"animateur_\"+nomThematique) {\n                containersAnimateurs[i].style.background = \"#433162\";\n                containersAnimateurs[i].style.color = \"white\";\n                document.getElementById('profileOpacity_'+nomThematique).classList.add('ajoutBackgroundChoisi');\n                document.getElementById('profileChecked_'+nomThematique).style.display = 'block';\n            }\n        }\n    }\n\n    const ajoutReponse = (index) => {\n        if (!tabReponseJoueurs.includes(index)) {\n            tabReponseJoueurs.push(index);\n            let reponseContainer = document.getElementById('reponse'+index);\n            reponseContainer.style.background = '#e375a3';\n            reponseContainer.style.color = 'white';\n        }\n        else {\n            console.log('already added');\n        }\n    }\n\n    const verifieReponse = () => {\n \n        //console.log(tabReponseJoueurs);\n        //console.log(questionQuizz);\n        if (!Array.isArray(questionQuizz.bonne_reponse)) { // unique bonne réponse\n            if (tabReponseJoueurs.length == 1 &&  questionQuizz.bonne_reponse == tabReponseJoueurs[0]) { // cocher qu\"une case et c'est la bonne réponse\n                setBonneReponse(1);\n                console.log('gagné');\n            }\n            else {\n                setBonneReponse(0);\n                console.log('non gagné');\n            }\n        }\n        else {\n                console.log('mchoice');\n                tabReponseJoueurs = tabReponseJoueurs.sort();\n                console.log(tabReponseJoueurs);\n                console.log(questionQuizz.bonne_reponse);\n\n                if (tabReponseJoueurs.sort().toString() == questionQuizz.bonne_reponse.sort().toString()) {\n                    console.log('gagné multiple choices');\n                    setBonneReponse(1);\n                }\n                else {\n                    setBonneReponse(0);\n                    console.log('non multiple choices');\n                }\n        }\n\n        document.getElementById('validBtn').style.display = 'none';\n        // TODO boucler et n'affichez que les réponses choisies par le joueur\n        let reponses = document.getElementsByClassName('reponses');\n\n        for (let i=0; i<reponses.length; i++) {\n            reponses[i].style.background = '#e06f4d';\n            reponses[i].style.color = 'white';\n        }\n\n        if (Array.isArray(questionQuizz.bonne_reponse)) {\n            for (let i=0; i<questionQuizz.bonne_reponse.length; i++) {\n                console.log(questionQuizz.bonne_reponse[i]);\n                document.getElementById('reponse'+questionQuizz.bonne_reponse[i]).style.background = '#4fab78';\n            }\n        }\n        else {\n            console.log(document.getElementById('reponse'+questionQuizz.bonne_reponse[0]));\n            console.log(questionQuizz.bonne_reponse);\n            document.getElementById('reponse'+questionQuizz.bonne_reponse).style.background = '#4fab78';\n            document.getElementById('reponse'+questionQuizz.bonne_reponse).style.color = 'white';\n        }\n    \n\n        // TODO CSS\n    }\n\n    return (\n        <div id=\"panelActions\">\n            <div>\n                {/* <div>Peut relancer un dé par tour</div> */}\n                <button onClick={() => displayPopIn()}>Question Quizz</button>\n                {/* <div>Acces après avoir débloquer la cave</div> */}\n            </div>\n\n            {showPopInQuestion &&\n                <Modal setShowModal={setShowPopInQuestion}>\n\n                    {!displayQuestionView && (\n                        <div id=\"choixAnimateur\">\n                            <p className=\"subTitle\">CHOISSISEZ L'ANIMATEUR QUE VOUS SOUHAITEZ GUÉRIR</p>\n                            <p className=\"remarque\">À noter que la question quizz n’est disponible que lors de la récupération d‘un point </p>\n\n                            <div className=\"listAnimateurChoisis\">\n                                {animateurs.map(animateur =>\n                                        <div className='animateurInfos' id= {'animateur_'+animateur.nomThematique} onClick={() => displayQuestion(animateur.nomThematique)} >\n                                            <div className='profil'>\n                                                <div className='profil_containerImg'>\n                                                    <div className='profileOpacity' id={'profileOpacity_'+animateur.nomThematique}></div>\n                                                    <div className='profileChecked' id={'profileChecked_'+animateur.nomThematique}><img src={choisiIcon}/></div>\n                                                    <img src={stalkyProfil} />\n                                                </div>\n                                            </div>\n                                            <p className='persoNom'>{animateur.nom}</p>\n                                        </div>\n                                )}\n                            </div>\n\n                            <button className=\"buttonConfirmer\"  onClick={() => questionQuizz.choix !== undefined ? setDisplayQuestionView(true) : console.log('nothing to display')}>Super !</button>\n                        </div>\n                   )}\n\n                    {displayQuestionView && (\n                        <div id=\"questionQuizz\">\n                            <p className=\"subTitle\">QUESTION QUIZZ</p>\n                            <p className=\"nomThematique\">{animateursQuestionsInfos.nomThematique}</p>\n                            \n                            <div>\n                                <p className=\"questionTitre\">{questionQuizz.titre}</p>\n                                {questionQuizz.choix.multiples ?\n                                    (<div className=\"listReponses\">{questionQuizz.choix.multiples.map((choix,i) => <p  className=\"reponses\" id={\"reponse\"+i} onClick={() => ajoutReponse(i)}>{choix}</p>)}</div>)\n                                    :\n                                    (<div className=\"listReponses\">{questionQuizz.choix.map((choix,i) => <p className=\"reponses\"  id={\"reponse\"+i} onClick={() => ajoutReponse(i)}>{choix}</p>)}</div>)\n\n                                }\n                                <button className=\"buttonConfirmer\" id=\"validBtn\" onClick={() => verifieReponse()}>Valider</button>\n                            </div>\n\n                            {/* BONNE REPONSE */}\n                            {bonneReponse === 1 && (\n                                <div className=\"resultsContainer\" id=\"resultsContainer_bon\">\n                                    <p className=\"result\">Bravo ! Tu peux récupérer un point</p>\n                                    <p className=\"infos\">Pour plus d’informations n’hésite pas à aller dans la galerie pour trouver des ressources</p>\n                                    {/*<!--<button className=\"buttonConfirmer\" >Fermer</button>-->*/}\n                                </div>\n                            )}\n\n                            {/* MAUVAISE REPONSE */}\n                            {bonneReponse === 0 && (\n                                <div className=\"resultsContainer\" id=\"resultsContainer_mauvais\">\n                                    <p className=\"result\">Mince, pas de point pour cette fois</p>\n                                    <p className=\"infos\">Pour plus d’informations n’hésite pas à aller dans la galerie pour trouver des ressources</p>\n                                    {/*<!--<button className=\"buttonConfirmer\" >Fermer</button>-->*/}\n                                </div>\n                            )}\n                        \n                    </div>\n                    )\n                    }\n                </Modal>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}