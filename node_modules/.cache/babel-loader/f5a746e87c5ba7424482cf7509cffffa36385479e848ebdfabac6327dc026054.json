{"ast":null,"code":"var CACHE_NAME = 'pwa-task-manager';\nvar urlsToCache = ['/', '/completed'];\n\n// Install a service worker\nself.addEventListener('install', event => {\n  // Perform install steps\n  event.waitUntil(caches.open(CACHE_NAME).then(function (cache) {\n    console.log('Opened cache');\n    return cache.addAll(urlsToCache);\n  }));\n});\n\n// Cache and return requests\nself.addEventListener('fetch', event => {\n  event.respondWith(caches.match(event.request).then(function (response) {\n    // Cache hit - return response\n    if (response) {\n      return response;\n    }\n    return fetch(event.request);\n  }));\n});\n\n// Update a service worker\nself.addEventListener('activate', event => {\n  var cacheWhitelist = ['pwa-task-manager'];\n  event.waitUntil(caches.keys().then(cacheNames => {\n    return Promise.all(cacheNames.map(cacheName => {\n      if (cacheWhitelist.indexOf(cacheName) === -1) {\n        return caches.delete(cacheName);\n      }\n    }));\n  }));\n});","map":{"version":3,"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","respondWith","match","request","response","fetch","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete"],"sources":["/Users/guydefontgalland/PhpstormProjects/les-minis-deboggueurs/src/service-worker.js"],"sourcesContent":["var CACHE_NAME = 'pwa-task-manager';\nvar urlsToCache = [\n  '/',\n  '/completed'\n];\n\n// Install a service worker\nself.addEventListener('install', event => {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then(function(cache) {\n        console.log('Opened cache');\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\n// Cache and return requests\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    caches.match(event.request)\n      .then(function(response) {\n        // Cache hit - return response\n        if (response) {\n          return response;\n        }\n        return fetch(event.request);\n      }\n    )\n  );\n});\n\n// Update a service worker\nself.addEventListener('activate', event => {\n  var cacheWhitelist = ['pwa-task-manager'];\n  event.waitUntil(\n    caches.keys().then(cacheNames => {\n      return Promise.all(\n        cacheNames.map(cacheName => {\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});"],"mappings":"AAAA,IAAIA,UAAU,GAAG,kBAAkB;AACnC,IAAIC,WAAW,GAAG,CAChB,GAAG,EACH,YAAY,CACb;;AAED;AACAC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAEC,KAAK,IAAI;EACxC;EACAA,KAAK,CAACC,SAAS,CACbC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CACpBQ,IAAI,CAAC,UAASC,KAAK,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAOF,KAAK,CAACG,MAAM,CAACX,WAAW,CAAC;EAClC,CAAC,CACL,CAAC;AACH,CAAC,CAAC;;AAEF;AACAC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAI;EACtCA,KAAK,CAACS,WAAW,CACfP,MAAM,CAACQ,KAAK,CAACV,KAAK,CAACW,OAAO,CAAC,CACxBP,IAAI,CAAC,UAASQ,QAAQ,EAAE;IACvB;IACA,IAAIA,QAAQ,EAAE;MACZ,OAAOA,QAAQ;IACjB;IACA,OAAOC,KAAK,CAACb,KAAK,CAACW,OAAO,CAAC;EAC7B,CACF,CACF,CAAC;AACH,CAAC,CAAC;;AAEF;AACAb,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAEC,KAAK,IAAI;EACzC,IAAIc,cAAc,GAAG,CAAC,kBAAkB,CAAC;EACzCd,KAAK,CAACC,SAAS,CACbC,MAAM,CAACa,IAAI,CAAC,CAAC,CAACX,IAAI,CAACY,UAAU,IAAI;IAC/B,OAAOC,OAAO,CAACC,GAAG,CAChBF,UAAU,CAACG,GAAG,CAACC,SAAS,IAAI;MAC1B,IAAIN,cAAc,CAACO,OAAO,CAACD,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5C,OAAOlB,MAAM,CAACoB,MAAM,CAACF,SAAS,CAAC;MACjC;IACF,CAAC,CACH,CAAC;EACH,CAAC,CACH,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}